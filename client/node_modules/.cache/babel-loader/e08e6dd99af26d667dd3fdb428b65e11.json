{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/shapochka/webs/nodeProject1/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"; // Routing\n\nimport PrivateRoute from \"./components/routing/PrivateRoute\"; // Screens\n\nimport PrivateScreen from \"./components/screens/PrivateScreen\";\nimport LoginScreen from \"./components/screens/LoginScreen\";\nimport RegisterScreen from \"./components/screens/RegisterScreen\";\nimport ForgotPasswordScreen from \"./components/screens/ForgotPasswordScreen\";\nimport ResetPasswordScreen from \"./components/screens/ResetPasswordScreen\";\nimport Home from \"./components/screens/Home\";\n\nconst App = () => {\n  _s();\n\n  const [privateData, setPrivateData] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchPrivateDate = async () => {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n        }\n      };\n\n      try {\n        const {\n          data\n        } = await axios.get(\"/protected\", config);\n        console.log(data);\n        setPrivateData(data.data);\n      } catch (error) {\n        localStorage.removeItem(\"authToken\");\n        setPrivateData('');\n      }\n    };\n\n    fetchPrivateDate();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: props => {\n          /*#__PURE__*/\n          _jsxDEV(Home, {\n            privateData: privateData,\n            error: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 52\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/protected\",\n        component: PrivateScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        component: LoginScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/register\",\n        component: RegisterScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/forgotpassword\",\n        component: ForgotPasswordScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/passwordreset/:resetToken\",\n        component: ResetPasswordScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ebKxfOeDezh30Ip1+ng2CWV+tLE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/shapochka/webs/nodeProject1/client/src/App.js"],"names":["React","useEffect","useState","axios","BrowserRouter","Router","Switch","Route","PrivateRoute","PrivateScreen","LoginScreen","RegisterScreen","ForgotPasswordScreen","ResetPasswordScreen","Home","App","privateData","setPrivateData","error","setError","fetchPrivateDate","config","headers","authorization","localStorage","getItem","data","get","console","log","removeItem","props"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Routing\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\n\n// Screens\nimport PrivateScreen from \"./components/screens/PrivateScreen\";\nimport LoginScreen from \"./components/screens/LoginScreen\";\nimport RegisterScreen from \"./components/screens/RegisterScreen\";\nimport ForgotPasswordScreen from \"./components/screens/ForgotPasswordScreen\";\nimport ResetPasswordScreen from \"./components/screens/ResetPasswordScreen\";\nimport Home from \"./components/screens/Home\";\n\nconst App = () => {\n  const [privateData, setPrivateData] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    const fetchPrivateDate = async () => {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n      };\n\n      try {\n        const { data } = await axios.get(\"/protected\", config);\n        console.log(data);\n        setPrivateData(data.data);\n      } catch (error) {\n        localStorage.removeItem(\"authToken\");\n        setPrivateData('');\n      }\n    };\n\n    fetchPrivateDate();\n  }, []);\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={(props)=>{<Home privateData={privateData} error={error} />}} />\n        <Route exact path=\"/protected\" component={PrivateScreen} />\n        <Route exact path=\"/login\" component={LoginScreen} />\n        <Route exact path=\"/register\" component={RegisterScreen} />\n        <Route exact path=\"/forgotpassword\" component={ForgotPasswordScreen} />\n        <Route\n          exact\n          path=\"/passwordreset/:resetToken\"\n          component={ResetPasswordScreen}\n        />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}