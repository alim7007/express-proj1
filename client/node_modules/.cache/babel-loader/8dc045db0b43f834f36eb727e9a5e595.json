{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/shapochka/webs/nodeProject1/client/src/components/screens/VerifyPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport Navbar from '../Navbar';\nimport Footer from '../Footer';\n\nconst VerifyPassword = props => {\n  _s();\n\n  const history = useHistory();\n  let query = queryString.parse(props.location.search);\n  const [error, setError] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n\n  const fetchPrivateDate = async e => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    if (password !== password2) {\n      setPassword(\"\");\n      setPassword2(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      setError(\"Passwords do not match\");\n    } else {\n      const changes = {\n        password: password\n      };\n\n      try {\n        const {\n          data\n        } = await axios.post(`/verify_reset_password?token=${query.token}`, changes, config);\n        localStorage.setItem(\"authToken\", data.jwtHeaderToken); // history.push(\"/\");\n        // window.location.reload();\n      } catch (error) {\n        setError(error.response.data.error);\n        setTimeout(() => {\n          setError(\"\");\n        }, 3000);\n        localStorage.removeItem(\"authToken\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column vh-100\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      privateData: props.privateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container d-flex justify-content-center align-items-center mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 offset-md-3 col-xl-4 offset-xl-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card shadow\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: \"Reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: fetchPrivateDate,\n                  className: \"validated-form\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      htmlFor: \"password\",\n                      children: \"Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"form-control\",\n                      onChange: e => setPassword(e.target.value),\n                      value: password,\n                      type: \"password\",\n                      id: \"password\",\n                      name: \"password\",\n                      required: true,\n                      autoComplete: \"off\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      htmlFor: \"password2\",\n                      children: \"Confirm Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"form-control\",\n                      onChange: e => setPassword2(e.target.value),\n                      value: password2,\n                      type: \"password\",\n                      id: \"password2\",\n                      name: \"password2\",\n                      required: true,\n                      autoComplete: \"off\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-success btn-block\",\n                    children: \"Confirm\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 23\n                  }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error-message\",\n                    children: error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n};\n\n_s(VerifyPassword, \"M36ef4FTMpzFHG3JMd6sz67hi6w=\", false, function () {\n  return [useHistory];\n});\n\n_c = VerifyPassword;\nexport default VerifyPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerifyPassword\");","map":{"version":3,"sources":["/home/shapochka/webs/nodeProject1/client/src/components/screens/VerifyPassword.js"],"names":["React","useState","axios","useHistory","queryString","Navbar","Footer","VerifyPassword","props","history","query","parse","location","search","error","setError","password","setPassword","password2","setPassword2","fetchPrivateDate","e","preventDefault","config","header","setTimeout","changes","data","post","token","localStorage","setItem","jwtHeaderToken","response","removeItem","privateData","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport Navbar from '../Navbar'\nimport Footer from '../Footer'\n\nconst VerifyPassword = (props) => {\n    const history = useHistory();\n    let query = queryString.parse(props.location.search);\n    const [error, setError] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n\n    const fetchPrivateDate = async (e) => {\n        e.preventDefault();\n\n      const config = {\n        header: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      if (password !== password2) {\n        setPassword(\"\");\n        setPassword2(\"\");\n        setTimeout(() => {\n          setError(\"\");\n        }, 5000);\n        setError(\"Passwords do not match\");\n      }else{\nconst changes = {\n  password: password,\n};\ntry {\n  const { data } = await axios.post(\n    `/verify_reset_password?token=${query.token}`,\n    changes,\n    config\n  );\n  localStorage.setItem(\"authToken\", data.jwtHeaderToken);\n  // history.push(\"/\");\n  // window.location.reload();\n} catch (error) {\n  setError(error.response.data.error);\n  setTimeout(() => {\n    setError(\"\");\n  }, 3000);\n  localStorage.removeItem(\"authToken\");\n}\n      }\n    };\n\n    return (\n      <div className=\"d-flex flex-column vh-100\">\n        <Navbar privateData={props.privateData} />\n        <main className=\"container mt-5\">\n          <div className=\"container d-flex justify-content-center align-items-center mt-5\">\n            <div className=\"row\">\n              <div className=\"col-md-6 offset-md-3 col-xl-4 offset-xl-4\">\n                <div className=\"card shadow\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">Reset</h5>\n                    <form\n                      onSubmit={fetchPrivateDate}\n                      className=\"validated-form\"\n                    >\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\" htmlFor=\"password\">\n                          Password\n                        </label>\n                        <input\n                          className=\"form-control\"\n                          onChange={(e) => setPassword(e.target.value)}\n                          value={password}\n                          type=\"password\"\n                          id=\"password\"\n                          name=\"password\"\n                          required\n                          autoComplete=\"off\"\n                        />\n                      </div>\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\" htmlFor=\"password2\">\n                          Confirm Password\n                        </label>\n                        <input\n                          className=\"form-control\"\n                          onChange={(e) => setPassword2(e.target.value)}\n                          value={password2}\n                          type=\"password\"\n                          id=\"password2\"\n                          name=\"password2\"\n                          required\n                          autoComplete=\"off\"\n                        />\n                      </div>\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-success btn-block\"\n                      >\n                        Confirm\n                      </button>\n                      {error && <span className=\"error-message\">{error}</span>}\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </div>\n    );\n}\n\nexport default VerifyPassword\n"]},"metadata":{},"sourceType":"module"}