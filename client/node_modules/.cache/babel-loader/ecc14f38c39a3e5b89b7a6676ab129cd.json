{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/shapochka/webs/nodeProject1/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"; // Screens\n\nimport PrivateScreen from \"./components/screens/PrivateScreen\";\nimport LoginScreen from \"./components/screens/LoginScreen\";\nimport RegisterScreen from \"./components/screens/RegisterScreen\";\nimport ForgotPasswordScreen from \"./components/screens/ForgotPasswordScreen\";\nimport ResetPasswordScreen from \"./components/screens/ResetPasswordScreen\";\nimport Home from \"./components/screens/Home\";\n\nconst App = () => {\n  _s();\n\n  const [privateData, setPrivateData] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    let localToken = localStorage.getItem(\"authToken\");\n\n    const fetchPrivateDate = async () => {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n        }\n      };\n\n      try {\n        const {\n          data\n        } = await axios.get(\"/protected\", config);\n        console.log(data);\n        setPrivateData(data.data);\n      } catch (error) {\n        // localStorage.removeItem(\"authToken\");\n        setPrivateData('');\n      }\n    };\n\n    if (!localToken && !localToken == undefined) return fetchPrivateDate();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: () => /*#__PURE__*/_jsxDEV(Home, {\n          privateData: privateData,\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/protected\",\n        component: () => /*#__PURE__*/_jsxDEV(PrivateScreen, {\n          privateData: privateData,\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        component: () => /*#__PURE__*/_jsxDEV(LoginScreen, {\n          privateData: privateData,\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/register\",\n        component: () => /*#__PURE__*/_jsxDEV(RegisterScreen, {\n          privateData: privateData,\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/forgotpassword\",\n        component: () => /*#__PURE__*/_jsxDEV(ForgotPasswordScreen, {\n          privateData: privateData,\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/passwordreset/:resetToken\",\n        component: () => /*#__PURE__*/_jsxDEV(ResetPasswordScreen, {\n          privateData: privateData,\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ebKxfOeDezh30Ip1+ng2CWV+tLE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/shapochka/webs/nodeProject1/client/src/App.js"],"names":["React","useEffect","useState","axios","BrowserRouter","Router","Switch","Route","PrivateScreen","LoginScreen","RegisterScreen","ForgotPasswordScreen","ResetPasswordScreen","Home","App","privateData","setPrivateData","error","setError","localToken","localStorage","getItem","fetchPrivateDate","config","headers","authorization","data","get","console","log","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Screens\nimport PrivateScreen from \"./components/screens/PrivateScreen\";\nimport LoginScreen from \"./components/screens/LoginScreen\";\nimport RegisterScreen from \"./components/screens/RegisterScreen\";\nimport ForgotPasswordScreen from \"./components/screens/ForgotPasswordScreen\";\nimport ResetPasswordScreen from \"./components/screens/ResetPasswordScreen\";\nimport Home from \"./components/screens/Home\";\n\nconst App = () => {\n  const [privateData, setPrivateData] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    let localToken = localStorage.getItem(\"authToken\") \n    const fetchPrivateDate = async () => {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n      };\n\n      try {\n        const { data } = await axios.get(\"/protected\", config);\n        console.log(data);\n        setPrivateData(data.data);\n      } catch (error) {\n        // localStorage.removeItem(\"authToken\");\n        setPrivateData('');\n      }\n    };\n    if (!localToken && !localToken == undefined) return fetchPrivateDate();\n  }, []);\n  return (\n    <Router>\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          component={() => <Home privateData={privateData} error={error} />}\n        />\n        <Route\n          exact\n          path=\"/protected\"\n          component={() => (\n            <PrivateScreen privateData={privateData} error={error} />\n          )}\n        />\n        <Route\n          exact\n          path=\"/login\"\n          component={() => (\n            <LoginScreen privateData={privateData} error={error} />\n          )}\n        />\n        <Route\n          exact\n          path=\"/register\"\n          component={() => (\n            <RegisterScreen privateData={privateData} error={error} />\n          )}\n        />\n        <Route\n          exact\n          path=\"/forgotpassword\"\n          component={() => (\n            <ForgotPasswordScreen privateData={privateData} error={error} />\n          )}\n        />\n        <Route\n          exact\n          path=\"/passwordreset/:resetToken\"\n          component={() => (\n            <ResetPasswordScreen privateData={privateData} error={error} />\n          )}\n        />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}