{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/shapochka/webs/nodeProject1/client/src/components/screens/ResetPasswordScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Navbar from \"../Navbar\";\nimport Footer from \"../Footer\";\nimport axios from \"axios\";\nimport \"./ResetPasswordScreen.css\";\n\nconst ResetPasswordScreen = ({\n  history,\n  match\n}) => {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const resetPasswordHandler = async e => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    if (password !== confirmPassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Passwords don't match\");\n    }\n\n    try {\n      const {\n        data\n      } = await axios.put(`/api/auth/passwordreset/${match.params.resetToken}`, {\n        password\n      }, config);\n      console.log(data);\n      setSuccess(data.data);\n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column vh-100\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      privateData: props.privateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), emailSend ? /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container d-flex justify-content-center align-items-center mt-5\",\n        children: \"Check your email for Verify reset password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container d-flex justify-content-center align-items-center mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 offset-md-3 col-xl-4 offset-xl-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card shadow\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: \"Reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: forgotPasswordHandler,\n                  className: \"validated-form\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      htmlFor: \"email\",\n                      children: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"form-control\",\n                      onChange: e => setEmail(e.target.value),\n                      value: email,\n                      type: \"email\",\n                      id: \"email\",\n                      name: \"email\",\n                      required: true,\n                      autoComplete: \"off\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-success btn-block\",\n                    children: \"Reset\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 23\n                  }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error-message\",\n                    children: error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPasswordScreen, \"imNu7i+cu64rhW3fm3LuJad5BNU=\");\n\n_c = ResetPasswordScreen;\nexport default ResetPasswordScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPasswordScreen\");","map":{"version":3,"sources":["/home/shapochka/webs/nodeProject1/client/src/components/screens/ResetPasswordScreen.js"],"names":["useState","Navbar","Footer","axios","ResetPasswordScreen","history","match","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","resetPasswordHandler","e","preventDefault","config","header","setTimeout","data","put","params","resetToken","console","log","response","props","privateData","emailSend","forgotPasswordHandler","setEmail","target","value","email"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport Navbar from \"../Navbar\";\nimport Footer from \"../Footer\";\nimport axios from \"axios\";\n\nimport \"./ResetPasswordScreen.css\";\n\nconst ResetPasswordScreen = ({ history, match }) => {\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const resetPasswordHandler = async (e) => {\n    e.preventDefault();\n\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    if (password !== confirmPassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Passwords don't match\");\n    }\n\n    try {\n      const { data } = await axios.put(\n        `/api/auth/passwordreset/${match.params.resetToken}`,\n        {\n          password,\n        },\n        config\n      );\n\n      console.log(data);\n      setSuccess(data.data);\n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return (\n    <div className=\"d-flex flex-column vh-100\">\n      <Navbar privateData={props.privateData} />\n      {emailSend ? (\n        <main className=\"container mt-5\">\n          <div className=\"container d-flex justify-content-center align-items-center mt-5\">\n            Check your email for Verify reset password\n          </div>\n        </main>\n      ) : (\n        <main className=\"container mt-5\">\n          <div className=\"container d-flex justify-content-center align-items-center mt-5\">\n            <div className=\"row\">\n              <div className=\"col-md-6 offset-md-3 col-xl-4 offset-xl-4\">\n                <div className=\"card shadow\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">Reset</h5>\n                    <form\n                      onSubmit={forgotPasswordHandler}\n                      className=\"validated-form\"\n                    >\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\" htmlFor=\"email\">\n                          Email\n                        </label>\n                        <input\n                          className=\"form-control\"\n                          onChange={(e) => setEmail(e.target.value)}\n                          value={email}\n                          type=\"email\"\n                          id=\"email\"\n                          name=\"email\"\n                          required\n                          autoComplete=\"off\"\n                        />\n                      </div>\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-success btn-block\"\n                      >\n                        Reset\n                      </button>\n                      {error && <span className=\"error-message\">{error}</span>}\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      )}\n      <Footer />\n    </div>\n  );\n};\n\nexport default ResetPasswordScreen;\n"]},"metadata":{},"sourceType":"module"}